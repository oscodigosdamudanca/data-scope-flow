import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// Carregar vari√°veis de ambiente
dotenv.config();

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseKey = process.env.VITE_SUPABASE_PUBLISHABLE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente do Supabase n√£o encontradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkUsersStatus() {
  console.log('üîç Verificando status dos usu√°rios no sistema...\n');

  try {
    // 1. Verificar total de usu√°rios
    const { data: profiles, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
      .order('created_at', { ascending: false });

    if (profilesError) {
      console.error('‚ùå Erro ao buscar profiles:', profilesError);
      return;
    }

    console.log(`üìä Total de usu√°rios cadastrados: ${profiles.length}\n`);

    if (profiles.length === 0) {
      console.log('‚ö†Ô∏è  Nenhum usu√°rio encontrado no sistema');
      console.log('üìù Pr√≥ximo passo: Registrar primeiro usu√°rio via interface web\n');
      console.log('üîó Acesse: http://localhost:8080/auth');
      console.log('üìß Use o email: santananegociosdigitais@gmail.com');
      return;
    }

    // 2. Listar usu√°rios existentes
    console.log('üë• Usu√°rios cadastrados:');
    console.log('‚ïê'.repeat(80));
    
    profiles.forEach((profile, index) => {
      console.log(`${index + 1}. ID: ${profile.id}`);
      console.log(`   Nome: ${profile.display_name || 'N√£o informado'}`);
      console.log(`   Telefone: ${profile.phone || 'N√£o informado'}`);
      console.log(`   Role: ${profile.app_role || 'N√£o definido'}`);
      console.log(`   Criado em: ${new Date(profile.created_at).toLocaleString('pt-BR')}`);
      console.log('‚îÄ'.repeat(40));
    });

    // 3. Verificar se existe desenvolvedor
    const developers = profiles.filter(p => p.app_role === 'developer');
    
    if (developers.length === 0) {
      console.log('\n‚ö†Ô∏è  Nenhum usu√°rio com role "developer" encontrado');
      console.log('üéØ Pr√≥ximo passo: Atribuir role "developer" a um usu√°rio existente');
      
      if (profiles.length > 0) {
        console.log('\nüí° Usu√°rios dispon√≠veis para promover a developer:');
        profiles.forEach((profile, index) => {
          console.log(`   ${index + 1}. ${profile.display_name || 'Sem nome'} (${profile.id})`);
        });
      }
    } else {
      console.log('\n‚úÖ Desenvolvedor(es) encontrado(s):');
      developers.forEach(dev => {
        console.log(`   - ${dev.display_name || 'Sem nome'} (${dev.id})`);
      });
    }

  } catch (error) {
    console.error('‚ùå Erro geral:', error);
  }
}

// Executar verifica√ß√£o
checkUsersStatus();